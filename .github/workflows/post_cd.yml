name: Post-CD Terraform Destroy

on:
  workflow_dispatch:
    inputs:
      confirm:
        description: 'Type "yes" to confirm destruction'
        required: true

jobs:
  destroy:
    runs-on: ubuntu-latest
    environment: production

    steps:
      # Step 1: Check out the repository code
      - name: Check out repository
        uses: actions/checkout@v3

      # Step 2: Set up Terraform
      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: latest

      # Step 3: Create GCP credentials file
      - name: Create GCP credentials file
        run: |
          mkdir -p terraform
          echo "${{ secrets.GCP_CREDENTIALS_FILE_B64 }}" | base64 --decode > terraform/gcp_credentials.json
          echo "âœ… GCP credentials file created."

      # Step 4: Initialize Terraform (configure backend, etc.)
      - name: Initialize Terraform
        working-directory: terraform
        env:
          TF_VAR_GCP_CREDENTIALS_FILE: "gcp_credentials.json"
          TF_VAR_GCP_PROJECT: ${{ secrets.GCP_PROJECT }}
          TF_VAR_GCP_REGION: ${{ secrets.GCP_REGION }}
          GOOGLE_APPLICATION_CREDENTIALS: "gcp_credentials.json"
        run: terraform init -input=false -reconfigure

      # Step 5: Delete the LoadBalancer Service (Kubernetes Service)
      - name: Delete LoadBalancer Service
        run: |
          echo "Deleting Kubernetes Service 'gym-gym-service' in namespace 'gym-namespace'..."
          kubectl delete svc gym-gym-service -n gym-namespace || echo "Service not found, skipping"

      # Step 6: Delete the Backend Service created by the LoadBalancer
      - name: Delete Backend Service
        run: |
          echo "Deleting backend service 'gym-backend-service'..."
          gcloud compute backend-services delete gym-backend-service --global --quiet || echo "Backend service not found, skipping"

      # Step 7: Wait until backend service is fully deleted
      - name: Wait for Backend Service Deletion
        run: |
          echo "Waiting for backend service 'gym-backend-service' to be deleted..."
          for i in {1..30}; do
            if ! gcloud compute backend-services list --global | grep -q gym-backend-service; then
              echo "Backend service deleted."
              exit 0
            fi
            echo "Backend service still exists. Waiting 10 seconds..."
            sleep 10
          done
          echo "Timed out waiting for backend service deletion."
          exit 1

      # Step 8: (Optional) Wait a few additional seconds for propagation
      - name: Extra wait for cleanup
        run: |
          echo "Sleeping an extra 30 seconds for propagation..."
          sleep 30


      # Step 8: Destroy Infrastructure with Terraform
      - name: Destroy Infrastructure
        working-directory: terraform
        env:
          TF_VAR_GCP_CREDENTIALS_FILE: "gcp_credentials.json"
          TF_VAR_GCP_PROJECT: ${{ secrets.GCP_PROJECT }}
          TF_VAR_GCP_REGION: ${{ secrets.GCP_REGION }}
          TF_VAR_DATABASE_URL: ${{ secrets.DATABASE_URL }}
          TF_VAR_SECRET_KEY: ${{ secrets.SECRET_KEY }}
          TF_VAR_MY_GITHUB_TOKEN: ${{ secrets.MY_GITHUB_TOKEN }}
          TF_VAR_image_tag: "v1.0.${{ github.run_number }}"
          GOOGLE_APPLICATION_CREDENTIALS: "gcp_credentials.json"
        run: terraform destroy -auto-approve -input=false
