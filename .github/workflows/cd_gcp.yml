name: CD GCP Workflow

on:
  workflow_run:
    workflows:
      - CI Workflow
    types: 
      - completed

jobs:
  deploy_gcp:
    runs-on: ubuntu-latest

    steps:
      - name: Check out code
        uses: actions/checkout@v2

      # Set up Terraform
      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: latest

      # Configure GCP credentials from GitHub secrets
      - name: Authenticate to GCP
        run: |
          echo "${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}" > gcp-keyfile.json
          gcloud auth activate-service-account --key-file=gcp-keyfile.json
          gcloud config set project ${{ secrets.GCP_PROJECT_ID }}
          gcloud config set compute/region ${{ secrets.GCP_REGION }}
          gcloud config set compute/zone ${{ secrets.GCP_ZONE }}
        shell: bash

        # This requires that you've added the following secrets in your repository:
        # GCP_SERVICE_ACCOUNT_KEY - the JSON content of your service account
        # GCP_PROJECT_ID
        # GCP_REGION (like 'us-central1')
        # GCP_ZONE (like 'us-central1-a')
        
        # Also ensure that the service account has these roles:
        #   - roles/compute.admin
        #   - roles/storage.admin
        #   - roles/iam.serviceAccountUser
        # or equivalent for your project

      # Terraform init/plan/apply using your "terraform_gcp" folder
      - name: Terraform Init and Apply
        working-directory: terraform_gcp
        env:
          TF_VAR_project_id: ${{ secrets.GCP_PROJECT_ID }}
          TF_VAR_region: ${{ secrets.GCP_REGION }}
          TF_VAR_zone: ${{ secrets.GCP_ZONE }}
        run: |
          terraform init
          terraform apply -auto-approve

      - name: Output GCP IP
        working-directory: terraform_gcp
        run: |
          echo "Public IP of the instance:"
          terraform output instance_external_ip
