name: CD GCP Workflow

on:
  workflow_run:
    workflows:
      - CI Workflow
    types:
      - completed

jobs:
  deploy_gcp:
    runs-on: ubuntu-latest

    steps:
      - name: Check out code
        uses: actions/checkout@v2

      # ---------------------------------------------------------
      # 1) Install Google Cloud SDK on this runner.
      # ---------------------------------------------------------
      - name: Set up gcloud CLI
        uses: google-github-actions/setup-gcloud@v1
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          # We'll still do manual "echo" below, so skip service_account_key here
          export_default_credentials: false

      # ---------------------------------------------------------
      # 2) Set up Terraform
      # ---------------------------------------------------------
      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: latest

      # ---------------------------------------------------------
      # 3) Authenticate to GCP with your service account key
      # ---------------------------------------------------------
      - name: Authenticate to GCP
        shell: bash
        run: |
          # Write the raw JSON from your GitHub secret into a file
          # while removing any Windows-style carriage returns:
          echo "${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}" | tr -d '\r' > gcp-keyfile.json

          # Actually authenticate with the service account:
          gcloud auth activate-service-account --key-file=gcp-keyfile.json

          # Set project, region, zone
          gcloud config set project ${{ secrets.GCP_PROJECT_ID }}
          gcloud config set compute/region ${{ secrets.GCP_REGION }}
          gcloud config set compute/zone ${{ secrets.GCP_ZONE }}

        # Make sure your secrets are set:
        #   GCP_SERVICE_ACCOUNT_KEY (the full JSON)
        #   GCP_PROJECT_ID
        #   GCP_REGION
        #   GCP_ZONE

      # ---------------------------------------------------------
      # 4) Terraform Init and Apply
      # ---------------------------------------------------------
      - name: Terraform Init and Apply
        working-directory: terraform_gcp
        env:
          TF_VAR_project_id: ${{ secrets.GCP_PROJECT_ID }}
          TF_VAR_region: ${{ secrets.GCP_REGION }}
          TF_VAR_zone: ${{ secrets.GCP_ZONE }}
        run: |
          terraform init
          terraform apply -auto-approve

      # ---------------------------------------------------------
      # 5) Output the instance's public IP
      # ---------------------------------------------------------
      - name: Output GCP IP
        working-directory: terraform_gcp
        run: |
          echo "Public IP of the instance:"
          terraform output instance_external_ip
