name: CD Workflow

on:
  workflow_run:
    workflows:
      - CI Workflow
    types:
      - completed

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: latest

      - name: Apply Terraform Configuration
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: "us-east-1" # or replace with your default region
        working-directory: terraform
        run: |
          terraform init
          terraform apply -auto-approve

      - name: Extract EC2 Public IP from Terraform Output
        id: get_ip
        working-directory: terraform
        run: |
          echo "Fetching EC2 Public IP from Terraform output log..."
          TERRAFORM_OUTPUT=$(terraform output -json)
          if [ -z "$TERRAFORM_OUTPUT" ]; then
            echo "Terraform output is empty. Exiting..." >&2
            exit 1
          fi
          EC2_IP=$(echo "$TERRAFORM_OUTPUT" | jq -r '.public_ip.value' 2>/dev/null)
          if [ -z "$EC2_IP" ]; then
            echo "Failed to extract EC2 public IP from Terraform output." >&2
            exit 1
          fi
          echo "EC2_IP=$EC2_IP" >> $GITHUB_ENV
          echo "Public IP fetched: $EC2_IP"

      - name: Wait for 240 seconds
        run: |
          echo "Waiting for 240 seconds..."
          sleep 240

      - name: Check Service Status
        run: |
          echo "Checking if the service is running on port 5000..."
          curl -v http://$EC2_IP:5000 || echo "Service is not accessible."

      - name: Wait for 60 more seconds
        run: |
          echo "Waiting for an additional 60 seconds..."
          sleep 60

      - name: Destroy Terraform Configuration
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: "us-east-1" # or replace with your default region
        working-directory: terraform
        run: |
          terraform destroy -auto-approve
