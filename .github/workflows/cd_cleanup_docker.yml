name: Cleanup DockerHub and Helm Tags

on:
  workflow_dispatch:
    inputs:
      confirm:
        description: 'Type "yes" to cleanup DockerHub and Helm tags'
        required: true
        default: 'no'

jobs:
  cleanup:
    if: ${{ github.event.inputs.confirm == 'yes' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install jq
        run: sudo apt-get update && sudo apt-get install -y jq

      # --------------------------
      # 1) DockerHub Cleanup
      # --------------------------
      - name: Cleanup DockerHub repository
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        run: |
          set -e
          echo "Logging in to DockerHub..."
          TOKEN=$(curl -s -H "Content-Type: application/json" \
            -X POST \
            -d '{"username": "'"$DOCKER_USERNAME"'", "password": "'"$DOCKER_PASSWORD"'"}' \
            https://hub.docker.com/v2/users/login/ | jq -r .token)
          if [ -z "$TOKEN" ] || [ "$TOKEN" == "null" ]; then
            echo "Failed to retrieve token"
            exit 1
          fi

          REPO="nutzkiller/gym"
          echo "Fetching tags for repository $REPO..."

          # Fetch up to 100 tags (adjust page_size if needed)
          TAGS=$(curl -s -H "Authorization: JWT $TOKEN" \
            "https://hub.docker.com/v2/repositories/$REPO/tags/?page_size=100" \
            | jq -r '.results | sort_by(.last_updated) | reverse | .[].name')

          echo "All tags:"
          echo "$TAGS"

          # Keep only the latest 5 tags
          KEEP_TAGS=$(echo "$TAGS" | head -n 5)
          echo "Tags to keep (latest 5):"
          echo "$KEEP_TAGS"

          # Delete tags that are not in KEEP_TAGS
          for tag in $TAGS; do
            if echo "$KEEP_TAGS" | grep -qx "$tag"; then
              echo "Keeping tag: $tag"
            else
              echo "Deleting tag: $tag"
              curl -s -X DELETE -H "Authorization: JWT $TOKEN" \
                "https://hub.docker.com/v2/repositories/$REPO/tags/$tag/"
            fi
          done

          echo "DockerHub cleanup completed."

      # --------------------------
      # 2) Helm Git Tags Cleanup
      # --------------------------
      - name: Cleanup Helm Tags
        env:
          GITHUB_TOKEN: ${{ secrets.MY_GITHUB_TOKEN }}
        run: |
          set -e
          echo "Fetching Git tags for NutzKiller/helm repository..."
          
          # Fetch up to 100 tags via the Git references API
          tags_json=$(curl -s -H "Authorization: token $GITHUB_TOKEN" "https://api.github.com/repos/NutzKiller/helm/git/refs/tags?per_page=100")
          count=$(echo "$tags_json" | jq 'length')
          echo "Found $count tags"
          
          # Read each tag into an array so that each line is one JSON object
          mapfile -t tag_lines < <(echo "$tags_json" | jq -c '.[]')
          
          tag_info_array=()
          for item in "${tag_lines[@]}"; do
            # Get the tag reference and object details
            ref=$(echo "$item" | jq -r '.ref')
            object_url=$(echo "$item" | jq -r '.object.url')
            object_type=$(echo "$item" | jq -r '.object.type')
            
            # If the tag is annotated, fetch the tag object to get the actual commit SHA
            if [ "$object_type" = "tag" ]; then
              annotated_json=$(curl -s -H "Authorization: token $GITHUB_TOKEN" "$object_url")
              commit_sha=$(echo "$annotated_json" | jq -r '.object.sha')
            else
              commit_sha=$(echo "$item" | jq -r '.object.sha')
            fi
            
            # Retrieve the commit to get its committer date
            commit_json=$(curl -s -H "Authorization: token $GITHUB_TOKEN" "https://api.github.com/repos/NutzKiller/helm/commits/$commit_sha")
            commit_date=$(echo "$commit_json" | jq -r '.commit.committer.date')
            
            # Save a compact JSON object with the tag reference, commit SHA, and date
            tag_info_array+=("$(echo "{\"ref\":\"$ref\",\"sha\":\"$commit_sha\",\"date\":\"$commit_date\"}")")
          done
          
          # Combine all tag info objects into a JSON array
          tag_info_json=$(printf '%s\n' "${tag_info_array[@]}" | jq -s '.')
          
          # Sort tags by commit date (newest first)
          sorted_tags=$(echo "$tag_info_json" | jq 'sort_by(.date) | reverse')
          
          # Get refs for the 5 newest tags and for all tags
          keep_refs=$(echo "$sorted_tags" | jq -r '.[0:5].ref')
          all_refs=$(echo "$sorted_tags" | jq -r '.[].ref')
          
          echo "Tags to keep (newest 5):"
          echo "$keep_refs"
          
          # Delete tags that are not in the keep list
          for ref in $all_refs; do
            if echo "$keep_refs" | grep -qx "$ref"; then
              echo "Keeping tag: $ref"
            else
              echo "Deleting tag: $ref"
              tag_name=$(echo "$ref" | sed 's#^refs/tags/##')
              curl -s -X DELETE -H "Authorization: token $GITHUB_TOKEN" \
                "https://api.github.com/repos/NutzKiller/helm/git/refs/tags/$tag_name"
            fi
          done
          
          echo "Helm tags cleanup completed."
      