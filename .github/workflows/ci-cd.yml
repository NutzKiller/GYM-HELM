name: CI/CD Workflow

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build Docker image
        run: |
          VERSION=v1.0.${{ github.run_number }}
          docker build -t nutzkiller/gym:$VERSION .
          docker tag nutzkiller/gym:$VERSION nutzkiller/gym:latest

      - name: Push Docker image to Docker Hub
        run: |
          VERSION=v1.0.${{ github.run_number }}
          docker push nutzkiller/gym:$VERSION
          docker push nutzkiller/gym:latest

      - name: Log in to EC2 and deploy
        uses: appleboy/ssh-action@v0.1.5
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_KEY }}
          script: |
            echo "=== Ensuring Docker is installed on EC2 ==="
            sudo yum update -y
            sudo yum install -y docker python3 python3-pip python3-libs
            sudo service docker start
            sudo systemctl enable docker

            echo "=== Checking if docker-compose is installed via pip ==="
            if ! command -v docker-compose &> /dev/null; then
              echo "Installing docker-compose via pip..."
              # Sometimes you need extra libs for crypt() with python3.7
              # if missing, also do: sudo yum install -y libcrypt
              sudo pip3 install --force-reinstall --upgrade docker-compose
            else
              echo "docker-compose is already installed."
            fi

            echo "=== Adding ec2-user to Docker group (optional) ==="
            sudo usermod -aG docker ec2-user || true

            echo "=== Logging in to Docker Hub on EC2 ==="
            docker login -u "${{ secrets.DOCKER_USERNAME }}" -p "${{ secrets.DOCKER_PASSWORD }}"

            echo "=== Pulling latest image ==="
            docker pull nutzkiller/gym:latest

            echo "=== Stopping old container if exists ==="
            docker stop gym_app || true
            docker rm gym_app || true

            # CREATE the directory if it doesn't exist
            echo "=== Ensuring /home/ec2-user/gym directory exists ==="
            sudo mkdir -p /home/ec2-user/gym
            # Make ec2-user own it, so we can cd into it
            sudo chown ec2-user:ec2-user /home/ec2-user/gym

            echo "=== Running docker-compose ==="
            cd /home/ec2-user/gym

            # You should have a docker-compose.yml in /home/ec2-user/gym
            # If you haven't copied it up, do so. Then:
            docker-compose pull
            docker-compose up -d

            echo "=== Verifying the app is responding on port 5000 ==="
            sleep 5
            if curl -f http://localhost:5000; then
              echo "App is up and responding!"
            else
              echo "App not responding, deployment failed!"
              exit 1
            fi

            echo "=== Deployment complete! ==="
