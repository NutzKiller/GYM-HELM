name: CI/CD Workflow

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest
    
    steps:
      - name: Check out code
        uses: actions/checkout@v2
        
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build Docker image
        run: |
          VERSION=v1.0.${{ github.run_number }}
          docker build -t nutzkiller/gym:$VERSION .
          docker tag nutzkiller/gym:$VERSION nutzkiller/gym:latest

      - name: Push Docker image to Docker Hub
        run: |
          VERSION=v1.0.${{ github.run_number }}
          docker push nutzkiller/gym:$VERSION
          docker push nutzkiller/gym:latest

      - name: Log in to EC2 and deploy
        uses: appleboy/ssh-action@v0.1.5
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}  # e.g. ec2-user
          key: ${{ secrets.EC2_KEY }}
          script: |
            echo "=== Updating and installing dependencies ==="
            sudo yum update -y
            # Install docker, python/pip, git, plus needed libs
            sudo yum install -y docker python3 python3-pip python3-libs git

            echo "=== Starting & enabling Docker ==="
            sudo service docker start
            sudo systemctl enable docker

            echo "=== Checking if docker-compose is installed via pip ==="
            if ! command -v docker-compose &> /dev/null; then
              echo "Installing docker-compose via pip..."
              sudo pip3 install --force-reinstall --upgrade docker-compose
            else
              echo "docker-compose is already installed."
            fi

            echo "=== Adding ec2-user to Docker group (optional) ==="
            sudo usermod -aG docker ec2-user || true

            echo "=== Logging in to Docker Hub on EC2 ==="
            docker login -u \"${{ secrets.DOCKER_USERNAME }}\" -p \"${{ secrets.DOCKER_PASSWORD }}\"

            echo "=== Pulling latest Docker image ==="
            docker pull nutzkiller/gym:latest

            echo "=== Stopping old container if exists ==="
            docker stop gym_app || true
            docker rm gym_app || true

            echo "=== Handling /home/ec2-user/gym ==="
            if [ ! -d /home/ec2-user/gym ]; then
              # No folder at all => clone from scratch
              echo "No /home/ec2-user/gym folder => cloning fresh"
              sudo mkdir -p /home/ec2-user
              cd /home/ec2-user
              sudo git clone https://github.com/NutzKiller/gym.git
              sudo chown -R ec2-user:ec2-user gym
            else
              # There is a /home/ec2-user/gym => check if it's a proper git repo
              if [ ! -d /home/ec2-user/gym/.git ]; then
                # Not a valid git repo => remove it and clone fresh
                echo "/home/ec2-user/gym exists but no .git => removing & cloning"
                sudo rm -rf /home/ec2-user/gym
                cd /home/ec2-user
                sudo git clone https://github.com/NutzKiller/gym.git
                sudo chown -R ec2-user:ec2-user gym
              else
                # It's a valid git repo => just pull latest changes
                echo "/home/ec2-user/gym is a valid git repo => pulling updates"
                cd /home/ec2-user/gym
                sudo git pull
                cd ..
              fi
            fi

            # Make sure ec2-user owns the gym folder
            sudo chown -R ec2-user:ec2-user /home/ec2-user/gym

            echo "=== Running docker-compose from the cloned repo ==="
            cd /home/ec2-user/gym

            # If docker-compose.yml is in the root of the repo, this is correct
            # If it's in a subfolder, e.g. /home/ec2-user/gym/deploy/docker-compose.yml, cd there or adapt
            if [ ! -f docker-compose.yml ]; then
              echo "ERROR: No docker-compose.yml found in /home/ec2-user/gym. Aborting."
              exit 1
            fi

            docker-compose pull
            docker-compose up -d

            echo "=== Waiting 10 seconds for the container to start ==="
            sleep 10

            echo "=== Checking if app responds on port 5000 ==="
            if curl -f http://localhost:5000; then
              echo "App is up and responding!"
            else
              echo "App not responding, deployment failed!"
              exit 1
            fi

            echo "=== Deployment complete! ==="
