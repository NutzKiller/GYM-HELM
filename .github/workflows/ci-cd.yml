name: CI/CD Workflow

on:
  push:
    branches:
      - main  # Trigger on pushes to main
  workflow_dispatch:  # Allow manual runs if needed

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      
      - name: Build Docker image
        run: |
          VERSION=v1.0.${{ github.run_number }}
          docker build -t nutzkiller/gym:$VERSION .
          docker tag nutzkiller/gym:$VERSION nutzkiller/gym:latest
      
      - name: Push Docker image to Docker Hub
        run: |
          VERSION=v1.0.${{ github.run_number }}
          docker push nutzkiller/gym:$VERSION
          docker push nutzkiller/gym:latest
      
      - name: Log in to EC2 and deploy
        uses: appleboy/ssh-action@v0.1.5
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_KEY }}
          script: |
            echo "=== Checking if Docker is installed on EC2 ==="
            if ! command -v docker &> /dev/null; then
              echo "Docker not found, installing..."
              sudo yum update -y
              sudo yum install -y docker
              sudo service docker start
              sudo systemctl enable docker
            else
              echo "Docker already installed."
            fi

            echo "=== Checking if docker-compose is installed on EC2 via pip ==="
            if ! command -v docker-compose &> /dev/null; then
              echo "Installing python3-pip and docker-compose..."
              sudo yum install -y python3-pip
              sudo pip3 install --force-reinstall --upgrade docker-compose
              echo "docker-compose installed via pip!"
            else
              echo "docker-compose already installed."
            fi

            echo "=== Adding $USER to Docker group (optional) ==="
            sudo usermod -aG docker $USER || true
            # We won't do 'newgrp' here because it's a non-interactive shell.

            echo "=== Logging in to Docker Hub on EC2 ==="
            docker login -u "${{ secrets.DOCKER_USERNAME }}" -p "${{ secrets.DOCKER_PASSWORD }}"

            echo "=== Pulling latest image ==="
            docker pull nutzkiller/gym:latest

            echo "=== Stopping old container if exists ==="
            docker stop gym_app || true
            docker rm gym_app || true

            echo "=== Running docker-compose ==="
            # IMPORTANT: Adjust this path to wherever docker-compose.yml actually lives on your EC2
            cd /home/ec2-user/gym

            # Pull updated images and start containers in the background
            docker-compose pull
            docker-compose up -d

            echo "=== Verifying the app is responding on port 5000 ==="
            sleep 5
            if curl -f http://localhost:5000; then
              echo "App is up and responding!"
            else
              echo "App not responding, deployment failed!"
              exit 1
            fi

            echo "=== Deployment complete! ==="
