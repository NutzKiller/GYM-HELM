name: CI/CD Workflow

on:
  push:
    branches:
      - main  # Trigger the action on push to the main branch
  workflow_dispatch:  # Manually trigger the workflow if needed

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
      
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    
    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
    
    - name: Build Docker image
      run: |
        VERSION=$(date +%Y%m%d%H%M%S)-${GITHUB_RUN_NUMBER}
        docker build -t nutzkiller/gym:$VERSION .
        docker tag nutzkiller/gym:$VERSION nutzkiller/gym:latest
    
    - name: Push Docker image to Docker Hub
      run: |
        VERSION=$(date +%Y%m%d%H%M%S)-${GITHUB_RUN_NUMBER}
        docker push nutzkiller/gym:$VERSION
        docker push nutzkiller/gym:latest
    
    - name: Log in to EC2 and deploy
      uses: appleboy/ssh-action@v0.1.5
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USER }}
        key: ${{ secrets.EC2_KEY }}
        script: |
          echo "Checking if Docker is installed..."
          
          # Install Docker if it's not already installed
          if ! command -v docker &> /dev/null; then
            echo "Docker not found, installing Docker..."
            # Update package index
            sudo apt-get update -y
            # Install required dependencies
            sudo apt-get install -y apt-transport-https ca-certificates curl software-properties-common
            # Add Dockerâ€™s official GPG key
            curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg
            # Set up the stable repository
            echo "deb [arch=amd64 signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
            # Install Docker
            sudo apt-get update -y
            sudo apt-get install -y docker-ce docker-ce-cli containerd.io
          else
            echo "Docker is already installed."
          fi

          echo "Pulling the Docker image on EC2..."
          docker pull nutzkiller/gym:latest
          
          echo "Stopping any existing containers running the app..."
          docker stop gym_app || true
          docker rm gym_app || true
          
          echo "Running the new Docker container..."
          docker run -d --rm --name gym_app -p 80:80 nutzkiller/gym:latest
          
          # Optional: If additional configurations are required, you can add them here
          # Example: Restart a service or set up environment variables
